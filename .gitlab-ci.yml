stages:
  - build-app
  - deploy

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

.build-spa:
  stage: build-app
  script:
    - yarn install
    - yarn build --mode ${ENVIRONMENT}
  artifacts:
    paths:
      - "dist"
    expire_in: 1 day
  tags:
    - test-sg-docker


build-spa:production:
  extends: .build-spa
  only: [main]
  variables:
    ENVIRONMENT: production

.build-image:
  stage: build-app
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  tags:
    - test-sg
  only:
    - main

build-image:production:
  extends: .build-image
  only: [main]
  needs:
    - job: build-spa:production
      artifacts: true

.deploy:
  stage: deploy
  dependencies: []
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $IMAGE_TAG
    - docker stop ficg-webapp || true
    - docker run --rm -d -p $PORT:80 --name ficg-webapp $IMAGE_TAG

deploy:production:
  extends: .deploy
  variables:
    PORT: 8085
  tags: [ficg-shell]
  only: [main]